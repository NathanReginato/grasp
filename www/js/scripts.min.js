angular.module('graspMobile', ['ionic', 'ngStorage'])

.run(function($ionicPlatform) {
  $ionicPlatform.ready(function() {
    // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard
    // for form inputs)
    if (window.cordova && window.cordova.plugins.Keyboard) {
      cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);
      cordova.plugins.Keyboard.disableScroll(true);

    }
    if (window.StatusBar) {
      // org.apache.cordova.statusbar required
      StatusBar.styleDefault();
    }
  });
})

angular.module('graspMobile')
.factory('landingPage', function($state, $http, $localStorage){

  return {
    signUp: signUp,
    logIn: logIn
  }

  function signUp(obj){
    $http.post('https://panic-button-g20.herokuapp.com/api/v1/auth/signup', obj).then(function(res){
      console.log(res);
      $localStorage.$default({ token: res.data.token })
      $state.go('dashboard');
    });
  }

  function logIn(obj){
    $http.post('https://panic-button-g20.herokuapp.com/api/v1/auth/login', obj).then(function(res){
      console.log(res);
      $localStorage.$default({ token: res.data.token })
      $state.go('dashboard');
    });
  }
});

function landingController($http, $state, $localStorage, landingPage){
    var vm = this;
    console.log("controller connected");
    vm.signup = function(){
      var obj = {
        name: vm.signup.username,
        password: vm.signup.password,
        email: vm.signup.email
      }
      landingPage.signUp(obj);
    }

    vm.login = function(){
      var obj = {
        password: vm.login.password,
        email: vm.login.email
      }
      landingPage.logIn(obj);
    }
  }

angular.module('graspMobile')

.config(function($stateProvider, $urlRouterProvider) {
  $stateProvider
  .state('landing', {
    scope: {},
    url: '/',
    controllerAs: 'vm',
    templateUrl: 'templates/landing.html',
    controller: landingController,
  })
  .state('dashboard', {
    scope: {},
    url: '/dashboard',
    controllerAs: 'vm',
    templateUrl: 'templates/dashboard.html',
    controller: function($http){
      var vm = this;
      console.log("dashboard controller connected");
    }
  })
  // if none of the above states are matched, use this as the fallback
  $urlRouterProvider.otherwise('/');
});
