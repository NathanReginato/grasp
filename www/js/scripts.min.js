angular.module('graspMobile', ['ionic', 'ngStorage'])

.run(function($ionicPlatform) {
  $ionicPlatform.ready(function() {
    // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard
    // for form inputs)
    if (window.cordova && window.cordova.plugins.Keyboard) {
      cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);
      cordova.plugins.Keyboard.disableScroll(true);

    }
    if (window.StatusBar) {
      // org.apache.cordova.statusbar required
      StatusBar.styleDefault();
    }
  });
})

angular.module('graspMobile')
.factory('landingPage', function($state, $http, $localStorage){

  return {
    signUp: signUp,
    logIn: logIn
  }

  function signUp(obj){
    // return $http.post('https://panic-button-g20.herokuapp.com/api/v1/auth/signup', obj)
    return $http.post('http://localhost:3000/api/v1/auth/signup', obj)
    .then(function(res){
      return res
    });
  }

  // 'https://panic-button-g20.herokuapp.com/api/v1/auth/signup'

  function logIn(obj){
    // return $http.post('https://panic-button-g20.herokuapp.com/api/v1/auth/login', obj)
    return $http.post('http://localhost:3000/api/v1/auth/login', obj)
    .then(function(res){
      return res
    });
  }

  // 'https://panic-button-g20.herokuapp.com/api/v1/auth/login'
});

function landingController($http, $state, $localStorage, landingPage){
    var vm = this;
    console.log("controller connected");
    vm.signup = function(){
      vm.signup.errors = []
      if (!vm.signup.username) { vm.signup.errors.push('please enter your name') }
      if (!vm.signup.password) { vm.signup.errors.push('please enter your password') }
      if (!vm.signup.email) { vm.signup.errors.push('please enter your email') }
      var obj = {
        name: vm.signup.username,
        password: vm.signup.password,
        email: vm.signup.email
      }
      if (vm.signup.errors.length === 0) {
        landingPage.signUp(obj)
        .then(function(res){
          console.log(res);
          $localStorage.$default({ token: res.data.token })
          $state.go('dashboard');
        }).catch(function(res){
          console.log('this is the catch');
          res.data.errors.forEach(function(elem){
          vm.signup.errors.push(elem)
          })
        })
      }
    }

    vm.login = function(){
      vm.login.errors = []
      if (!vm.login.password) { vm.login.errors.push('please enter your password') }
      if (!vm.login.email) { vm.login.errors.push('please enter your email') }
      var obj = {
        password: vm.login.password,
        email: vm.login.email
      }
      if (vm.login.errors.length === 0) {
        landingPage.logIn(obj).then(function (res) {
          // console.log(res);
          $localStorage.$default({ token: res.data.token })
          $state.go('dashboard');
        }).catch(function(res){
          console.log("this is the catch in login");
          res.data.errors.forEach(function(elem){
            vm.login.errors.push(elem)
          })
        })
      }
    }
  }

function dashboard($http, $state, $localStorage, dashboard){
  var vm = this;
    // body...
  dashboard.getClasses().then(function (res) {
    vm.classesArray = res.data
  })

  vm.joinlecture = function(id){
    console.log(id);
    $state.go('lectureView');
  }

}

angular.module('graspMobile')
.factory('dashboard', function($state, $http, $localStorage){

  return {
    getClasses: getClasses,
  }

  function getClasses(obj){
    // return $http.get('https://panic-button-g20.herokuapp.com/api/v1/users/participations')
    return $http.get('http://localhost:3000/api/v1/users/participations')
    .then(function(res){
      console.log(res);
      return res
    });
  }
});

angular.module('graspMobile')
.factory('authInterceptor', function ($location, $localStorage, $location) {
  return {
    request: function(config) {
      if ($localStorage.token) {
        config.headers.Authentication = $localStorage.token;
      }
      return config;
    },
  }
});

angular.module('graspMobile')
.factory('lectureView', function($state, $http, $localStorage){

  var classId;

  return {
    swipe: swipe,
  }

  //view changing on each swipe
  //socket send for each vote
  function swipe(){
    console.log("swiper no swiping");
  }


});

function lectureViewController ($http, $state, $localStorage){
    var vm = this;



    console.log("lecture view controller connected");
    // vm.signup = function(){
    //   if (vm.signup.errors.length === 0) {
    //     landingPage.signUp(obj)
    //     .then(function(res){
    //       console.log(res);
    //       $localStorage.$default({ token: res.data.token })
    //       $state.go('dashboard');
    //     }).catch(function(res){
    //       console.log('this is the catch');
    //       res.data.errors.forEach(function(elem){
    //       vm.signup.errors.push(elem)
    //       })
    //     })
    //   }
    // }
  }

angular.module('graspMobile')

.config(function($stateProvider, $urlRouterProvider, $httpProvider, $locationProvider) {
  $httpProvider.interceptors.push("authInterceptor");
  $locationProvider.html5Mode(true);

  $stateProvider
  .state('landing', {
    scope: {},
    url: '/',
    controllerAs: 'vm',
    templateUrl: 'templates/landing.html',
    controller: landingController,
  })
  .state('dashboard', {
    scope: {},
    url: '/dashboard',
    controllerAs: 'vm',
    templateUrl: 'templates/dashboard.html',
    controller: dashboard,
  })
  .state('lectureView', {
    scope: {},
    url: '/lectureview',
    controllerAs: 'vm',
    templateUrl: 'templates/lectureView.html',
    controller: lectureViewController,
  })
  // if none of the above states are matched, use this as the fallback
  $urlRouterProvider.otherwise('/');
});
